name: Build
on:
  workflow_dispatch:

jobs:
  build:
    name: Build package
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - { runner: windows-11, sys: MINGW64, arch: 64bit, env: x86_64, compiler: gcc }
          - { runner: windows-11, sys: MINGW32, arch: 32bit, env: i686, compiler: gcc }
          - { runner: windows-11-arm, sys: CLANGARM64, arch: 64bit-arm, env: clang-aarch64, compiler: clang }
    
    defaults:
      run:
        shell: msys2 {0}

    concurrency:
       group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Set up MinGW
        uses: yt-dlp/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.sys }}
          install: >-
            base-devel
            mingw-w64-${{ matrix.env }}-toolchain
            mingw-w64-${{ matrix.env }}-python
            mingw-w64-${{ matrix.env }}-python-pip

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: pyinstaller/pyinstaller
          ref: v6.15.0

      - name: Build bootloader
        run: |
          cd bootloader
          python waf distclean all --target-arch=${{ matrix.arch }} --${{ matrix.compiler }}

      - name: Build packages
        run: |
          python -m pip install wheel
          python setup.py sdist bdist_wheel

      - name: Deploy
        uses: yt-dlp/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: ${{ (matrix.env == 'clang-aarch64' && 'arm64') || matrix.env }}
          keep_files: true
